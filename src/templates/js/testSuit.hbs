import path from "path";
import {
    init,
    emulator,
    deployContractByName,
    executeScript,
    sendTransaction,
    getContractAddress,
    getAccountAddress,
} from "flow-js-testing";

const basePath = path.resolve(__dirname, "../{{cadenceFolder}}");

describe("Replicate Playground Accounts", () => {
    beforeEach(async () => {
      const basePath = path.resolve(__dirname, "../cadence");
      const port = 8080;

      await init(basePath, { port });

      // Start emulator instance on port 8080
      await emulator.start(port);
    });

    afterEach(async() => {
      await emulator.stop()
    });

    test("Create Accounts", async ()=>{
        // Playground project support 4 accounts, but nothing stops you from creating more by following the example laid out below
        const Alice = await getAccountAddress("Alice")
        const Bob = await getAccountAddress("Bob")
        const Charlie = await getAccountAddress("Charlie")
        const Dave = await getAccountAddress("Dave")

        console.log("Four Playground accounts were created with following addresses");
        console.log("Alice:", Alice)
        console.log("Bob:", Bob)
        console.log("Charlie:", Charlie)
        console.log("Dave:", Dave)
    })
})

describe("Deployment", () => {
    beforeEach(async () => {
      const basePath = path.resolve(__dirname, "../cadence");
      const port = 8080;

      await init(basePath, { port });

      // Start emulator instance on port 8080
      await emulator.start(port);
    });

    afterEach(async() => {
      await emulator.stop()
    });

    {{#each contractsUnitTests}}
        {{{this}}}
    {{/each}}
})

describe("Transactions", () => {
    beforeEach(async () => {
      const basePath = path.resolve(__dirname, "../cadence");
      const port = 8080;

      await init(basePath, { port });

      // Start emulator instance on port 8080
      await emulator.start(port);
    });

    afterEach(async() => {
     await emulator.stop()
    });

    {{#each transactionsUnitTests}}
        {{{this}}}
    {{/each}}
})

describe("Scripts", () => {
    beforeEach(async () => {
      const basePath = path.resolve(__dirname, "../cadence");
      const port = 8080;

      await init(basePath, { port });

      // Start emulator instance on port 8080
      await emulator.start(port);
    });

    afterEach(async() => {
      await emulator.stop()
    });

    {{#each scriptsUnitTests}}
        {{{this}}}
    {{/each}}
})